{"version":3,"sources":["components/form.jsx","components/weather.jsx","App.js","index.js"],"names":["Form","props","className","error","role","onSubmit","loadWeather","type","name","placeholder","autoComplete","minmaxTemp","min","max","Weather","city","temp_celsius","temp_max","temp_min","description","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","celsius","calculateCelsius","main","temp","weather","state","undefined","icon","Math","floor","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yPAyCeA,MAvCF,SAACC,GACZ,OACE,sBAAKC,UAAU,YAAf,UACE,8BAAMD,EAAME,MA8Bd,qBAAKD,UAAU,0BAA0BE,KAAK,QAA9C,8CA9BgC,OAC9B,uBAAMC,SAAUJ,EAAMK,YAAtB,UACE,8BACE,uBACEJ,UAAU,eACVK,KAAK,OACLC,KAAK,OACLC,YAAY,OACZC,aAAa,UAGjB,8BACE,uBACER,UAAU,eACVK,KAAK,OACLC,KAAK,UACLC,YAAY,UACZC,aAAa,UAGjB,8BACE,wBAAQR,UAAU,oBAAlB,kCCLV,SAASS,EAAWC,EAAKC,GACvB,GAAID,GAAOC,EACT,OACE,+BACE,uBAAMX,UAAU,OAAhB,UAAwBU,EAAxB,UACA,qCACA,uBAAMV,UAAU,OAAhB,UAAwBW,EAAxB,aAMOC,MA/BC,SAACb,GACf,OACE,qBAAKC,UAAU,oBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,6BAAKD,EAAMc,OAEVd,EAAMe,aACL,qBAAId,UAAU,OAAd,UAAsBD,EAAMe,aAA5B,UACE,KAEHL,EAAWV,EAAMgB,SAAUhB,EAAMiB,UAElC,uBACA,oBAAIhB,UAAU,OAAd,SAAsBD,EAAMkB,oBCN9BC,E,kDACJ,aAAe,IAAD,8BACZ,gBAmBFC,WApBc,uCAoBD,WAAOC,GAAP,qBAAAC,EAAA,yDACXD,EAAEE,iBAEIT,EAAOO,EAAEG,OAAOC,SAASX,KAAKY,MAC9BC,EAAUN,EAAEG,OAAOC,SAASE,QAAQD,OAEtCZ,IAAQa,EAND,iCAOcC,MAAM,oDAAD,OAC0Bd,EAD1B,aACmCa,EADnC,mBA7BlB,qCAsBD,cAOHE,EAPG,gBAWcA,EAASC,OAXvB,OAWHC,EAXG,OAYTC,QAAQC,IAAIF,GAEZ,EAAKG,SAAS,CACZpB,KAAK,GAAD,OAAKiB,EAASxB,KAAd,YAAsBwB,EAASI,IAAIR,SACvCS,QAAS,EAAKC,iBAAiBN,EAASO,KAAKC,MAC7CvB,SAAU,EAAKqB,iBAAiBN,EAASO,KAAKtB,UAC9CC,SAAU,EAAKoB,iBAAiBN,EAASO,KAAKrB,UAC9CC,YAAaa,EAASS,QAAQ,GAAGtB,YACjChB,OAAO,IApBA,wBAuBT,EAAKgC,SAAS,CAAEhC,OAAO,IAvBd,4CApBC,sDAEZ,EAAKuC,MAAQ,CACX3B,UAAM4B,EACNf,aAASe,EACTC,UAAMD,EACNJ,UAAMI,EACNN,aAASM,EACT1B,cAAU0B,EACVzB,cAAUyB,EACVxB,YAAa,GACbhB,OAAO,GAXG,E,oDAed,SAAiBqC,GAEf,OADUK,KAAKC,MAAMN,EAAO,U,oBA8B9B,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CAAMI,YAAayC,KAAK1B,WAAYlB,MAAO4C,KAAKL,MAAMvC,QACtD,cAAC,EAAD,CACEY,KAAMgC,KAAKL,MAAM3B,KACjBa,QAASmB,KAAKL,MAAMd,QACpBZ,aAAc+B,KAAKL,MAAML,QACzBpB,SAAU8B,KAAKL,MAAMzB,SACrBC,SAAU6B,KAAKL,MAAMxB,SACrBC,YAAa4B,KAAKL,MAAMvB,qB,GAzDhB6B,IAAMC,WAgET7B,I,MCpEf8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.40ed4da0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div>{props.error ? error() : null}</div>\r\n      <form onSubmit={props.loadWeather}>\r\n        <div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            placeholder=\"City\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-secondary\">Get weather</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction error() {\r\n  return (\r\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n      Please enter City and Country !!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"container weather\">\r\n      <div className=\"cards pt-4\">\r\n        <h1>{props.city}</h1>\r\n\r\n        {props.temp_celsius ? (\r\n          <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\r\n        ) : null}\r\n\r\n        {minmaxTemp(props.temp_max, props.temp_min)}\r\n\r\n        <br></br>\r\n        <h4 className=\"py-3\">{props.description}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction minmaxTemp(min, max) {\r\n  if (min && max) {\r\n    return (\r\n      <h3>\r\n        <span className=\"px-4\">{min}&deg;</span>\r\n        <span>|</span>\r\n        <span className=\"px-4\">{max}&deg;</span>\r\n      </h3>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\n\n// api call to api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_key = \"e76964f6c395fbbfa4845b8346c73c98\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n  }\n\n  calculateCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city} ,${country} &appid=${API_key}`\n      );\n\n      const response = await api_call.json();\n      console.log(response);\n\n      this.setState({\n        city: `${response.name},${response.sys.country}`,\n        celsius: this.calculateCelsius(response.main.temp),\n        temp_max: this.calculateCelsius(response.main.temp_max),\n        temp_min: this.calculateCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false,\n      });\n    } else {\n      this.setState({ error: true });\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadWeather={this.getWeather} error={this.state.error} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}